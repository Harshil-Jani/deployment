- name: Define if {{ name }} base data has been obtained from the public instance
  git:
    repo: "{{ repository }}"
    dest: "/home/{{ ansible_user }}/{{ directory }}"
    clone: no
    update: no
    accept_hostkey: yes
    key_file: "/home/{{ ansible_user }}/.ssh/cgus-bot-key"
  register: git_dir
  tags:
    - restart
    - start
    - update

- name: Remove existing locks in {{ name }}
  file:
    path: "/home/{{ ansible_user }}/{{ directory }}/.git/index.lock"
    state: absent
  when: git_dir.before is defined and git_dir.before
  tags:
    - restart
    - start
    - update

- name: Obtain {{ name }} initial data from the public instance
  git:
    repo: "{{ repository }}"
    dest: "/home/{{ ansible_user }}/{{ directory }}"
    depth: 1
    accept_hostkey: yes
    key_file: "/home/{{ ansible_user }}/.ssh/cgus-bot-key"
  when: git_dir.before is defined and not git_dir.before
  tags:
    - setup

- name: Get latest data from public instance of {{ name }}
  command:
    cmd: git pull
    chdir: "/home/{{ ansible_user }}/{{ directory }}"
  when: git_dir.before is defined and git_dir.before
  tags:
    - restart
    - start
    - update

- name: Drop all uncommitted changes on {{ name }}
  command:
    cmd: git reset --hard HEAD
    chdir: "/home/{{ ansible_user }}/{{ directory }}"
  tags:
    - restart
    - start
    - update

- name: Remove all leftover files in {{ name }}
  command:
    cmd: git clean --force
    chdir: "/home/{{ ansible_user }}/{{ directory }}"
  tags:
    - restart
    - start
    - update
