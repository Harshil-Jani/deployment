- name: Clone Repo
  git:
    repo: "{{ repo }}"
    dest: "/home/{{ ansible_user }}/{{ app }}"
    force: yes
    accept_hostkey: yes
    key_file: "/home/{{ ansible_user }}/.ssh/cgus-bot-key"
  register: git_clone_app_finished
  tags:
    - setup
    - update

- name: Install NPM packages
  npm:
    path: "/home/{{ ansible_user }}/{{ app }}"
    unsafe_perm: yes
    production: yes
  tags:
    - setup
    - update

- name: Add .env file
  copy:
    src: .env
    dest: "/home/{{ ansible_user }}/{{ app }}/.env"
  tags:
    - setup

- name: Stop CGUs
  command: forever stop "{{ app }}"
  ignore_errors: yes
  tags:
    - restart
    - stop
    - update

- name: Remove previous CGUs-versions data directory
  file:
    path: "/home/{{ ansible_user }}/{{ versions_directory }}"
    state: absent
  tags:
    - setup
    - update

- name: Remove previous CGUs-snapshots data directory
  file:
    path: "/home/{{ ansible_user }}/{{ snapshots_directory }}"
    state: absent
  tags:
    - setup
    - update

- name: Clone CGUs-versions repository
  git:
    repo: "{{ repo_versions }}"
    dest: "/home/{{ ansible_user }}/{{ versions_directory }}"
    accept_hostkey: yes
    key_file: "/home/{{ ansible_user }}/.ssh/cgus-bot-key"
  register: git_clone_app_finished
  tags:
    - setup
    - update

- name: Clone CGUs-snapshot repository
  git:
    repo: "{{ repo_snapshots }}"
    dest: "/home/{{ ansible_user }}/{{ snapshots_directory }}"
    accept_hostkey: yes
    key_file: "/home/{{ ansible_user }}/.ssh/cgus-bot-key"
  register: git_clone_app_finished
  tags:
    - setup
    - update

- name: Start CGUs
  command:
    cmd: forever start -m 10 -a --uid "{{ app }}" -c "npm run start:scheduler:prod" ./
    chdir: "/home/{{ ansible_user }}/{{ app }}"
  environment:
    NODE_ENV: production
    PORT: "{{ app_port }}"
  tags:
    - restart
    - start
    - update
